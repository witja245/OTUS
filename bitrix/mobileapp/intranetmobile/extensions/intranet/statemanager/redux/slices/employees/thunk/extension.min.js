jn.define("intranet/statemanager/redux/slices/employees/thunk",((e,t,n)=>{const s=e("statemanager/redux/store");const{sliceName:o}=e("intranet/statemanager/redux/slices/employees/meta");const{selectById:i}=e("intranet/statemanager/redux/slices/employees/selector");const{createAsyncThunk:r}=e("statemanager/redux/toolkit");const{RunActionExecutor:c}=e("rest/run-action-executor");const{isOnline:a}=e("device/connection");const m=()=>a();const d=({action:e,options:t})=>new Promise((n=>{new c(e,t).setHandler(n).call(false)}));const u=async({component:e,action:t,options:n})=>BX.ajax.runComponentAction(e,t,{mode:"class",data:n});const l=r(`${o}/reinvite`,(async({userId:e},{rejectWithValue:t})=>{try{const{isExtranetUser:n}=i(s.getState(),e);const o=await d({action:"intranetmobile.employees.reinvite",options:{userId:e,isExtranetUser:n}});const r=Date.now();const c={...o,userId:e,timestamp:r};if(c.status==="success"){return c}console.error(c.errors[0].message);return t(c)}catch(e){console.error(e)}}),{condition:m,getPendingMeta:({arg:e})=>({arg:e})});const p=r(`${o}/deleteInvitation`,(({userId:e})=>u({component:"bitrix:intranet.user.list",action:"setActivity",options:{params:{userId:e,action:"delete"}}})),{condition:m});const y=r(`${o}/fireEmployee`,(({userId:e})=>u({component:"bitrix:intranet.user.list",action:"setActivity",options:{params:{userId:e,action:"deactivate"}}})),{condition:m});const I=r(`${o}/hireEmployee`,(({userId:e})=>u({component:"bitrix:intranet.user.list",action:"setActivity",options:{params:{userId:e,action:"restore"}}})),{condition:m});const x=r(`${o}/confirmUserRequest`,(({userId:e,isAccept:t})=>d({action:"intranet.controller.invite.confirmUserRequest",options:{userId:e,isAccept:t?"Y":"N"}})),{condition:m});const g=r(`${o}/changeDepartment`,(async({userId:e,departments:t})=>d({action:"intranetmobile.employees.updateDepartment",options:{userId:e,newDepartmentsIds:Object.keys(t)}})),{condition:m});n.exports={reinvite:l,deleteInvitation:p,fireEmployee:y,hireEmployee:I,confirmUserRequest:x,changeDepartment:g}}));
//# sourceMappingURL=extension.map.js