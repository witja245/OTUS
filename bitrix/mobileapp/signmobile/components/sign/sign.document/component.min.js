(()=>{const e=e=>jn.require(e);const{SignDocument:t}=e("sign/document");const{SignDialog:o}=e("sign/dialog");const{getSigningLinkPromise:s}=e("sign/connector");const n="reviewer";const i="signer";const l=BX.componentParameters.get("memberId",false);const a=BX.componentParameters.get("url",false);const r=BX.componentParameters.get("role",i);const c=BX.componentParameters.get("title","");const u=BX.componentParameters.get("isGoskey",false);function g(e=r){m(e);layout.setRightButtons([{type:"cross",callback:()=>layout.close()}])}function m(e=r){if(e===n){layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE_REVIEWER"),useLargeTitleMode:true})}else{layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE"),useLargeTitleMode:true})}}if(a!==false){layout.showComponent(new t({hideButtons:r===n,url:a,widget:layout,memberId:l,title:c,isGoskey:u}));g()}else if(l!==false){s(l).then((({data:e})=>{const{url:s,isReadyForSigning:i,isGoskey:a,state:r,role:c,documentTitle:u=""}=e;if(i){layout.showComponent(new t({hideButtons:c===n,role:c,url:s,widget:layout,memberId:l,title:u,isGoskey:a}));g(c)}else{o.show({type:r,memberId:l,layoutWidget:layout,fileDownloadUrl:s,documentTitle:u})}})).catch((({errors:e})=>{let t=false;if(Array.isArray(e)){e.forEach((e=>{if(e.code==="ACCESS_DENIED"){o.show({type:o.ERROR_ACCESS_DENIED_BANNER_TYPE,layoutWidget:layout});t=true}}))}if(!t){o.show({type:o.ERROR_BANNER_TYPE,layoutWidget:layout})}}))}})();
//# sourceMappingURL=component.map.js